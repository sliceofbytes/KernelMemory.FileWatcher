<Project>
  <PropertyGroup>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)dotnet.ruleset</CodeAnalysisRuleSet>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoDefaultExcludes>true</NoDefaultExcludes>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <!-- Even better type safety with Refrence types -->
    <Nullable>enable</Nullable>
    <!-- Build Optimizations -->
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Define constant feature flags for enabling or disbling features across multiple projects. -->
    <DefineConstants>$(DefineConstants);FEATURE_X_ENABLED</DefineConstants>

    <!-- Define Build Configuration for Consistency -->
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
    <Optimize>false</Optimize>
  </PropertyGroup>
  <!-- Define Pre or Post Build Events-->
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="echo Example Prebuild Step." />
  </Target>

  <!-- Default Project Variables -->
  <PropertyGroup>
    <IncludeAnalyzers>true</IncludeAnalyzers>
    <IncludeSolutionItems>true</IncludeSolutionItems>
    <IncludeEditorConfig>true</IncludeEditorConfig>
    <IncludeStyleCop>true</IncludeStyleCop>
    <IncludeGlobalJson>true</IncludeGlobalJson>
    <IncludeDotEnv>true</IncludeDotEnv>
    <IncludeGithubActions>true</IncludeGithubActions>


    <IncludeNuGetPackages>true</IncludeNuGetPackages>

    <!-- Microsoft Packages -->
    <IncludeMicrosoftPackages>true</IncludeMicrosoftPackages>
    <IncludeMicrosoftConfiguration>true</IncludeMicrosoftConfiguration>
    <IncludeMicrosoftOptions>true</IncludeMicrosoftOptions>
    <IncludeMicrosoftDependencyInjection>true</IncludeMicrosoftDependencyInjection>
    <IncludeMicrosoftHttpFactory>true</IncludeMicrosoftHttpFactory>
    <IncludeMicrosoftHosting>true</IncludeMicrosoftHosting>

    <!-- Microsoft Package Abstractions -->
    <IncludeMicrosoftAbstractions>true</IncludeMicrosoftAbstractions>
    <IncludeMicrosoftIdentityAbstractions>true</IncludeMicrosoftIdentityAbstractions>


    <!-- Healthchecks -->
    <IncludeHealthChecks>true</IncludeHealthChecks>

    <!-- Serialization -->
    <IncludeNewtonSoft>true</IncludeNewtonSoft>

    <!-- Mapping -->
    <IncludeMapster>true</IncludeMapster>
    <IncludeMapsterTool>false</IncludeMapsterTool>


    <!-- Messaging -->
    <IncludeMassTransit>true</IncludeMassTransit>
    <!-- TODO: Not Implemented Yet --><IncludeAzureServiceBus>false</IncludeAzureServiceBus>
    <!-- TODO: Not Implemented Yet --><IncludeRabbitMQ>false</IncludeRabbitMQ>



    <!-- Testing -->


    <!-- Database Access -->
    <IncludeMSSqlServer>true</IncludeMSSqlServer>
    <IncludeEntityFramework>true</IncludeEntityFramework>

    <!-- TODO: Not Implemented Yet --> <IncludeSqlite>false</IncludeSqlite>  
    <!-- TODO: Not Implemented Yet --> <IncludePostgres>false</IncludePostgres> 
    


    <!-- Logging and Telemetry -->
    <IncludeSerilog>true</IncludeSerilog>
    <IncludeOpenTelemetry>true</IncludeOpenTelemetry>
    <IncludeSerilogTracing>true</IncludeSerilogTracing>

    <!-- AspNetCore -->
    <IncludeAspNetCorePackages>true</IncludeAspNetCorePackages>

    <!-- Global Using and Aliases -->
    <IncludeGlobalUsing>true</IncludeGlobalUsing>
    <IncludeDefaultIdType>true</IncludeDefaultIdType>


    <!-- Assembly Signing -->
    <IncludeAssemblySigning>false</IncludeAssemblySigning>

    
  </PropertyGroup>

  <!-- Analyzers -->
  <ItemGroup Condition="'$(IncludeAnalyzers)' != 'false'">

    <!-- Sonar Analyzers 9.x -->
    <PackageReference Include="SonarAnalyzer.CSharp" Version="9.*" PrivateAssets="all" Condition="$(MSBuildProjectExtension) == '.csproj'"/>

    <!-- Roslynator Analyzers 4.x -->
    <PackageReference Include="Roslynator.Analyzers" Version="4.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- Roslynator Formatting Analyzers 4.x -->
    <PackageReference Include="Roslynator.Formatting.Analyzers" Version="4.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- Roslynator CodeAnalysis Analyzers 4.x -->
    <PackageReference Include="Roslynator.CodeAnalysis.Analyzers" Version="4.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- Roslynator Code Fixes 4.x -->
    <PackageReference Include="Roslynator.CodeFixes" Version="4.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>


    <!-- Stylecop Analyzers 1.2.x-x -->
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.*-*" PrivateAssets="all" Condition="'$(IncludeStyleCop)' != 'false'">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>


     <!-- Microsoft CodeAnalysis Analyzers 3.x -->
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

     <!-- Microsoft CodeAnalysis Net Analyzers 8.x -->
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

     <!-- Microsoft Code Analysis Analyzer Utilities 3.x -->
    <PackageReference Include="Microsoft.CodeAnalysis.AnalyzerUtilities" Version="3.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

     <!-- Microsoft Dependency Validation Analyzers 0.x -->
    <PackageReference Include="Microsoft.DependencyValidation.Analyzers" Version="0.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <!-- Microsoft.EntityFrameworkCore.Analyzers -->
    <PackageReference Include="Microsoft.EntityFrameworkCore.Analyzers" Version="8.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>


    <!-- Coverlet Code Coverage 3.x -->
    <PackageReference Include="coverlet.collector" Version="6.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- Serilog Analyzers 0.1.x -->
    <PackageReference Include="SerilogAnalyzer" Version="0.1.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- MassTransit Analyzers 8.x -->
    <PackageReference Include="MassTransit.Analyzers" Version="8.*" PrivateAssets="all">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>


  </ItemGroup>


  <!-- Dot Files -->
  <ItemGroup Condition="'$(IncludeSolutionItems)' != 'false'">

      <!-- Include .editorconfig -->
      <AdditionalFiles Include="$(MSBuildThisFileDirectory).editorconfig" Link="Properties\.editorconfig" Condition="'$(IncludeEditorConfig)' != 'false'"/>

      <!-- Include stylecop.json -->
      <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="Properties\stylecop.json" Condition="'$(IncludeStyleCop)' != 'false'"/>
    
      <!-- Include global.json -->
      <AdditionalFiles Include="$(MSBuildThisFileDirectory)global.json" Link="Properties\global.json" Condition="'$(IncludeGlobalJson)' != 'false'"/>

      <!-- Include .env -->
      <AdditionalFiles Include="$(MSBuildThisFileDirectory).env" Link="Properties\.env" Condition="'$(IncludeDotEnv)' != 'false'"/>
  </ItemGroup>


   <!-- GitHub Workflow Files -->
  <ItemGroup Condition="'$(IncludeSolutionItems)' != 'false'">
    <!-- Include main.yml from .github/workflows -->
    <None Include="$(MSBuildThisFileDirectory).github/workflows/main.yml" Link=".github/workflows/main.yml" Condition="'$(IncludeGitHubActions)' != 'false'"/>
  </ItemGroup>
  

  <!-- **[ Configurable Nuget Packages  ]** -->
  
  <!-- Microsoft Packages -->
  <ItemGroup Condition="'$(IncludeNuGetPackages)' != 'false' or '$(IncludeMicrosoftPackages)' == 'true'">
    
    <!-- Primitives -->
    <PackageVersion Include="Microsoft.Extensions.Primitives" Version="8.*"/>

    <!-- Configuration -->
    <PackageVersion Include="Microsoft.Extensions.Configuration" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Configuration.Binder" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Configuration.Json" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Configuration.UserSecrets" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Configuration.CommandLine" Version="8.*" Condition="'$(IncludeMicrosoftConfiguration)' == 'true'" />

    
    <!-- Options -->
    <PackageVersion Include="Microsoft.Extensions.Options" Version="8.*" Condition="'$(IncludeMicrosoftOptions)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="8.*" Condition="'$(IncludeMicrosoftOptions)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Options.DataAnnotations" Version="8.*" Condition="'$(IncludeMicrosoftOptions)' == 'true'" />

    <!-- Dependency Injection -->
    <PackageVersion Include="Microsoft.Extensions.DependencyInjection" Version="8.*" Condition="'$(IncludeMicrosoftDependencyInjection)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.DependencyModel" Version="8.*" Condition="'$(IncludeMicrosoftDependencyInjection)' == 'true'" />



    <!-- Http Factory -->
    <PackageVersion Include="Microsoft.Extensions.Http" Version="8.*" Condition="'$(IncludeMicrosoftHttpFactory)' == 'true'" />
    <PackageVersion Include="Microsoft.Extensions.Http.Polly" Version="8.*" Condition="'$(IncludeMicrosoftHttpFactory)' == 'true'" />

    
    <!-- Health Checks -->
    <PackageVersion Include="Microsoft.Extensions.Diagnostics.HealthChecks" Version="8.*" Condition="'$(IncludeHealthChecks)' != 'false'"/>
    <PackageVersion Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="8.*" Condition="'$(IncludeHealthChecks)' != 'false'"/>


    <!-- Hosting -->
    <PackageVersion Include="Microsoft.Extensions.Hosting" Version="8.*" Condition="'$(IncludeMicrosoftHosting)' == 'true'" />


    <!-- Abstractions -->
    <PackageVersion Include="Microsoft.Extensions.Configuration.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.Caching.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.Logging.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.FileProviders.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.Hosting.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftAbstractions)' == 'true'"/>
    <PackageVersion Include="Microsoft.IdentityModel.Abstractions" Version="8.*" Condition="'$(IncludeMicrosoftIdentityAbstractions)' == 'true'"/>

    <!-- Reflection -->
    <PackageVersion Include="System.Reflection.Extensions" Version="4.*"/>
    
  </ItemGroup>


  
  <!-- Serialization - Newtonsoft -->
  <ItemGroup Condition="'$(IncludeNuGetPackages)' != 'false' or '$(IncludeNewtonsoft)' == 'true'">
    <PackageVersion Include="Newtonsoft.Json" Version="13.0.3" Condition="'$(IncludeNewtonsoft)' == 'true'"/>
    <PackageVersion Include="Newtonsoft.Json.Schema" Version="3.*" Condition="'$(IncludeNewtonsoft)' == 'true'"/>
  </ItemGroup>


  <!-- Mapping - Mapster -->
  <ItemGroup Condition="'$(IncludeNuGetPackages)' != 'false' or '$(IncludeMapster)' == 'true'">
    <PackageVersion Include="Mapster" Version="7.*" Condition="'$(IncludeMapster)' == 'true'" />
    <PackageVersion Include="Mapster.Core" Version="1.*" Condition="'$(IncludeMapster)' == 'true'" />
    <PackageVersion Include="Mapster.Async" Version="2.*" Condition="'$(IncludeMapster)' == 'true'" />
    <PackageVersion Include="Mapster.EFCore" Version="5.*" Condition="'$(IncludeMapster)' == 'true'" />
    <PackageVersion Include="Mapster.DependencyInjection" Version="1.*" Condition="'$(IncludeMapster)' == 'true'" />
    <PackageVersion Include="Mapster.Tool" Version ="8.*" Condition="'$(IncludeMapsterTool)' == 'true'" />
  </ItemGroup>

  <!-- Messaging - MassTransit -->
  <ItemGroup Condition="'$(IncludeNuGetPackages)' != 'false' or '$(IncludeMassTransit)' == 'true'">
    <PackageVersion Include="MassTransit" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true'" />
    <PackageVersion Include="MassTransit.RabbitMQ" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true' and '$(IncludeRabbitMQ)'" />
    <PackageVersion Include="MassTransit.Abstractions" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true'" />
    <PackageVersion Include="MassTransit.AspNetCore" Version="7.*" Condition="'$(IncludeMassTransit)' == 'true'" />
    <PackageVersion Include="MassTransit.Azure.ServiceBus.Core" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true' and '$(IncludeAzureServiceBus)' == 'true'" />
    <PackageVersion Include="MassTransit.Newtonsoft" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true' and '$(IncludeNewtonsoft)' == 'true'"/>
    <PackageVersion Include="MassTransit.EntityFrameworkCore" Version="8.*" Condition="'$(IncludeMassTransit)' == 'true' and '$(IncludeEntityFramework)' == 'true'"/>
  </ItemGroup>
  

  <!-- Logging and Telemetry Packages -->
  <ItemGroup Condition="'$(IncludeNuGetPackages)' != 'false' or '$(IncludeSerilog)' == 'true'">
    <PackageVersion Include="Serilog" Version="3.*"/>
    <PackageVersion Include="Serilog.Extensions.Logging" Version="8.*"/>
    <PackageVersion Include="Serilog.Extensions.Hosting" Version="8.*"/>
    <PackageVersion Include="Serilog.Settings.Configuration" Version="8.*"/>
    <PackageVersion Include="Serilog.Expressions" Version="4.*-*"/>
    <PackageVersion Include="Serilog.Exceptions" Version="8.*"/>
    <PackageVersion Include="Serilog.Exceptions.EntityFrameworkCore" Version="8.*" Condition="'$(IncludeEntityFramework)' == 'true'" />
    <PackageVersion Include="Serilog.Exceptions.SqlServer" Version="8.*" Condition="'$(IncludeMSSqlServer)' == 'true'" />


    <PackageVersion Include="Serilog.Sinks.Console" Version="5.*"/>
    <PackageVersion Include="Serilog.Sinks.Debug" Version="2.*"/>
    <PackageVersion Include="Serilog.Sinks.File" Version="5.*"/>
    <PackageVersion Include="Serilog.Sinks.Seq" Version="7.*"/>
    <PackageVersion Include="Serilog.Sinks.MsSqlServer" Version="6.*" Condition="'$(IncludeMSSqlServer)' == 'true'" />
    <PackageVersion Include="Serilog.Sinks.Async" Version="1.*"/>
    <PackageVersion Include="Serilog.Sinks.Map" Version="1.*"/>
    <PackageVersion Include="Serilog.Sinks.OpenTelemetry" Version="1.*"  Condition="'$(IncludeOpenTelemetry)' == 'true'" />
    <PackageVersion Include="Serilog.Sinks.PeriodicBatching" Version="1.*"/>


    <PackageVersion Include="Serilog.Enrichers.Environment" Version="2.*"/>
    <PackageVersion Include="Serilog.Enrichers.Process" Version="2.*"/>
    <PackageVersion Include="Serilog.Enrichers.Thread" Version="3.*"/>
    <PackageVersion Include="Serilog.Enrichers.Context" Version="4.*"/>
    <PackageVersion Include="Serilog.Enrichers.Memory" Version="1.*"/>
    <PackageVersion Include="Serilog.Enrichers.MassTransit" Version="2.*" Condition="'$(IncludeMassTransit)' == 'true'"/>


    <PackageVersion Include="Serilog.Enrichers.AssemblyName" Version="2.*"/>
    <PackageVersion Include="Serilog.Enrichers.Sensitive" Version="1.*"/>
    <PackageVersion Include="Serilog.Enrichers.Span" Version="3.*"/>


    <PackageVersion Include="Serilog.AspNetCore.Plus" Version="8.*" Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true'" />
    <PackageVersion Include="JSNLog" Version="3.*" Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true'" />
    <PackageVersion Include="JSNLog.Serilog" Version="2.*" Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true'" />
    <PackageVersion Include="Sentry.Serilog" Version="4.*" Condition="'$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true'" />
    <PackageVersion Include="OpenTelemetry.Instrumentation.AspNetCore" Version="1.*" Condition="('$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true') and '$(IncludeOpenTelemetry)' == 'true'" />
    <PackageVersion Include="SerilogTracing.Instrumentation.AspNetCore" Version="1.*" Condition="('$(UsingMicrosoftNETSdkWeb)' == 'true' or $(IncludeAspNetCorePackages) == 'true') and '$(IncludeSerilogTracing)' == 'true'" />

    <PackageVersion Include="SerilogTracing" Version="1.*" Condition="'$(IncludeSerilogTracing)' == 'true'" />
    <PackageVersion Include="SerilogTracing.Expressions" Version="1.*" Condition="'$(IncludeSerilogTracing)' == 'true'" />
    <PackageVersion Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" Version="1.*" Condition="'$(IncludeOpenTelemetry)' == 'true'" />
  </ItemGroup>

  

  <!-- Define global usings. -->
  <ItemGroup Condition="'$(IncludeGlobalUsings)' == 'true'">
    <!-- Define a DefaultIdType for the solution. -->
    <Using Include="System.Guid" Alias="DefaultIdType" Condition="'$(IncludeDefaultIdType)' == 'true'" />
  </ItemGroup>


  <!-- Assembly Signing -->
  <PropertyGroup Condition="'$(IncludeAssemblySigning)' == 'true'">
    <SignAssembly>false</SignAssembly>
    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)key.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
</Project>